<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="borrow">

	<resultMap id="borrowMap" type="example.entity.BorrowBook">
	</resultMap>

<!--	<resultMap id="BorrowByNameMap"  type="java.util.HashMap">-->
<!--		&lt;!&ndash; 配置主键，是关联Order的唯一标识 &ndash;&gt;-->
<!--		<id property="id" column="userId" />-->
<!--		<result property="bookName" column="bookName" />-->
<!--		<result property="startDate" column="startDate" />-->
<!--		<result property="entDate" column="entDate" />-->
<!--		<result property="returnDate" column="returnDate" />-->
<!--	</resultMap>-->

	<select id="queryAllBorrow" resultType="example.entity.BorrowBook">
		select b.* FROM borrow as b  left join book_users as u  on
		b.userId = u.id
		<where>
			<if test="id != 0">
				and	 u.id = #{id}
			</if>
			<if test="bookName != null and bookName !=''">
				and b.bookName = #{bookName}
			</if>
		</where>
		order by b.returnDate desc
	</select>

	<select id="queryAllBorrowByStartDate" resultType="example.entity.BorrowBook">
		select b.* FROM borrow as b  left join book_users as u  on
		b.userId = u.id
		<where>
			<if test="id != 0">
				and	 u.id = #{id}
			</if>
		</where>
		order by b.startDate desc
	</select>



	<select id="borrowCount" resultType="int">
		select count(*) as count from borrow left join book_users
		on borrow.userId =  book_users.id
		<where>
			<if test="id != null">
				and	 book_users.id = #{id}
			</if>
		</where>
	</select>



	<select id="queryAllOverdue" resultType="example.entity.BorrowBook">
		select b.* FROM borrow as b  left join book_users as u  on
		b.userId = u.id
		<where>
			overdue = 1
			<if test="id != 0">
				and	 u.id = #{id}
			</if>
			<if test="bookName != null and bookName !=''">
				and b.bookName = #{bookName}
			</if>
		</where>
		order by b.returnDate desc
	</select>

	<insert id="addBorrow" >
		INSERT INTO borrow ( userName, bookName,quantity , startDate, returnDate, userId, bookId)
		values (#{userName}, #{bookName}, #{bookQuantity}, #{startDate}, #{returnDate}, #{userId}, #{bookId})
	</insert>

	<select id="borrowMessage" resultType="example.entity.BorrowBook">
		SELECT * FROM borrow where userName = #{userName}
	</select>

	<select id="findBorrowById" resultType="example.entity.BorrowBook">
		SELECT * FROM borrow where id = #{id}
	</select>

	<update id="updateBorrow" >
		update borrow set endDate = #{endDate} , overdue = #{overdue} where id = #{id}
	</update>

	<select id="overdueCount" resultType="int">
		 select count(*) as count from borrow left join book_users
		 on borrow.userId =  book_users.id
		<where>
			borrow.overdue = 1
			<if test="id != null">
				and	 book_users.id = #{id}
			</if>
		</where>

	</select>

</mapper>
<!--
sqlMap生成描述:

-->