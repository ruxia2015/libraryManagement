<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="books">
	<resultMap id="booksMap" type="example.entity.Books">
		<id property="id" column="bookTypeId"/>
		<result property="bookTypeName" column="bookTypeName"/>
<!--		<association property="BookType" javaType="example.entity.Books">-->
<!--			&lt;!&ndash; 这里的id为user的id，如果写上表示给user的id属性赋值 &ndash;&gt;-->
<!--			<id property="id" column="bookTypeId"/>-->
<!--			<result property="bookTypeName" column="bookTypeName"/>-->
<!--		</association>-->
	</resultMap>


	<select id="queryAllBooks" resultType="example.entity.Books" >
		select b.*,t.bookTypeName  from books as b  left join book_type as t
		on b.bookTypeId = t.id
		<where>
			<if test="queryName != null and queryName != ''">
				and b.bookName like concat ('%',#{queryName},'%') or b.bookAuthor like concat ('%',#{queryName},'%')
			</if>
			<if test="bookTypeId != null ">
				and b.bookTypeId = #{bookTypeId}
			</if>
		</where>
		limit #{pageNo},#{pageSize}
	</select>

	<select id="queryAllBooksCount" resultType="int">
		select count(*) from  books as b  left join book_type as t
		on b.bookTypeId = t.id
		<where>
			<if test="queryName != null and queryName != ''">
				and bookName like concat ('%',#{queryName},'%') or bookAuthor like concat ('%',#{queryName},'%')
			</if>
			<if test="bookTypeId != null">
				and bookTypeId = #{bookTypeId}
			</if>
		</where>

	</select>

	<select id="queryAllBookList" resultType="example.entity.Books">
		select * from books
	</select>

	<select id="queryBook" resultType="example.entity.Books">
		select b.*,t.bookTypeName  from books as b  left join book_type as t
		on b.bookTypeId = t.id
		where b.id = #{id}
	</select>

	<select id="findBooksByName" resultType="example.entity.Books">
		select * from books where bookName= #{bookName}
	</select>

	<select id="findBookByIsbn" resultType="example.entity.Books">
		select * from books where bookIsbn= #{isbn}
	</select>

	<update id="updateBooksQuantity" >
		update books set bookQuantity = bookQuantity-#{quantity} where id = #{id}
	</update>

	<update id="addBooksQuantity" >
		update books set bookQuantity = bookQuantity+#{quantity} where id = #{id}
	</update>

	<insert id="addBook" >
		INSERT INTO books (bookIsbn, bookName, bookAuthor, bookParticulars, bookTypeId, bookPicture,
		bookPrice, createDate, bookTotal, bookQuantity)
		values (#{bookIsbn}, #{bookName},#{bookAuthor},  #{bookParticulars}, #{bookType}, #{bookPicture},
		#{bookPrice}, #{createDate}, #{bookTotal}, #{bookQuantity})
	</insert>

	<update id="updateBook">
		update books
		set
			bookIsbn=#{bookIsbn},
			 bookName=#{bookName},
			 bookAuthor=#{bookAuthor},
			 bookParticulars=#{bookParticulars},
			 bookTypeId=#{bookTypeId},
			 bookPicture=#{bookPicture},
			 bookPrice=#{bookPrice},
			 updateDate=#{updateDate},
			 bookTotal=#{bookTotal},
			 bookQuantity=#{bookQuantity}
	 where id = #{id}
	</update>

	<delete id="deleteBook">
		delete from books where id = #{id}
	</delete>

	<select id="queryBooksByName"  resultType="example.entity.Books">
		<!-- <bind name="search" value="'%' + searchStr + '%'" /> -->
		select * from
		(select a.id,a.code,a.name
		from books a
		where 1=1
		<if test="searchStr!=null and searchStr!=''">
			and name LIKE CONCAT(CONCAT('%', #{searchStr,jdbcType=VARCHAR}), '%')
		</if>
		order by code asc
		)b
		where 1=1 limit #{limit}
	</select>

</mapper>
